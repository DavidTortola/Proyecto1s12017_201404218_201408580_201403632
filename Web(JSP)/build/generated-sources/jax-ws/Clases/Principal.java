
package Clases;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Principal", targetNamespace = "http://WebService/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Principal {


    /**
     * 
     * @param idActivo
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EliminarTransaccion")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarTransaccion", targetNamespace = "http://WebService/", className = "Clases.EliminarTransaccion")
    @ResponseWrapper(localName = "EliminarTransaccionResponse", targetNamespace = "http://WebService/", className = "Clases.EliminarTransaccionResponse")
    @Action(input = "http://WebService/Principal/EliminarTransaccionRequest", output = "http://WebService/Principal/EliminarTransaccionResponse")
    public String eliminarTransaccion(
        @WebParam(name = "idActivo", targetNamespace = "")
        String idActivo);

    /**
     * 
     * @param departamento
     * @param usuario
     * @param empresa
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "ObtenerIdArbol")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ObtenerIdArbol", targetNamespace = "http://WebService/", className = "Clases.ObtenerIdArbol")
    @ResponseWrapper(localName = "ObtenerIdArbolResponse", targetNamespace = "http://WebService/", className = "Clases.ObtenerIdArbolResponse")
    @Action(input = "http://WebService/Principal/ObtenerIdArbolRequest", output = "http://WebService/Principal/ObtenerIdArbolResponse")
    public List<String> obtenerIdArbol(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento);

    /**
     * 
     * @param descripcion
     * @param departamento
     * @param usuario
     * @param empresa
     * @param nombreProducto
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RegistrarActivo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "RegistrarActivo", targetNamespace = "http://WebService/", className = "Clases.RegistrarActivo")
    @ResponseWrapper(localName = "RegistrarActivoResponse", targetNamespace = "http://WebService/", className = "Clases.RegistrarActivoResponse")
    @Action(input = "http://WebService/Principal/RegistrarActivoRequest", output = "http://WebService/Principal/RegistrarActivoResponse")
    public String registrarActivo(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "nombreProducto", targetNamespace = "")
        String nombreProducto,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento);

    /**
     * 
     * @param usuario
     * @param id
     * @param empresa
     * @param deartamento
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "EliminarActivo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "EliminarActivo", targetNamespace = "http://WebService/", className = "Clases.EliminarActivo")
    @ResponseWrapper(localName = "EliminarActivoResponse", targetNamespace = "http://WebService/", className = "Clases.EliminarActivoResponse")
    @Action(input = "http://WebService/Principal/EliminarActivoRequest", output = "http://WebService/Principal/EliminarActivoResponse")
    public String eliminarActivo(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "deartamento", targetNamespace = "")
        String deartamento);

    /**
     * 
     * @param descripcion
     * @param departamento
     * @param usuario
     * @param id
     * @param producto
     * @param empresa
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ModificarActivo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ModificarActivo", targetNamespace = "http://WebService/", className = "Clases.ModificarActivo")
    @ResponseWrapper(localName = "ModificarActivoResponse", targetNamespace = "http://WebService/", className = "Clases.ModificarActivoResponse")
    @Action(input = "http://WebService/Principal/ModificarActivoRequest", output = "http://WebService/Principal/ModificarActivoResponse")
    public String modificarActivo(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "producto", targetNamespace = "")
        String producto,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento);

    /**
     * 
     * @param parameter
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Prueba")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Prueba", targetNamespace = "http://WebService/", className = "Clases.Prueba")
    @ResponseWrapper(localName = "PruebaResponse", targetNamespace = "http://WebService/", className = "Clases.PruebaResponse")
    @Action(input = "http://WebService/Principal/PruebaRequest", output = "http://WebService/Principal/PruebaResponse")
    public String prueba(
        @WebParam(name = "parameter", targetNamespace = "")
        String parameter);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://WebService/", className = "Clases.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://WebService/", className = "Clases.HelloResponse")
    @Action(input = "http://WebService/Principal/helloRequest", output = "http://WebService/Principal/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

    /**
     * 
     * @param pass
     * @param departamento
     * @param usuario
     * @param empresa
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "Registrar")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Registrar", targetNamespace = "http://WebService/", className = "Clases.Registrar")
    @ResponseWrapper(localName = "RegistrarResponse", targetNamespace = "http://WebService/", className = "Clases.RegistrarResponse")
    @Action(input = "http://WebService/Principal/RegistrarRequest", output = "http://WebService/Principal/RegistrarResponse")
    public String registrar(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "pass", targetNamespace = "")
        String pass,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa);

    /**
     * 
     * @param pass
     * @param departamento
     * @param empresa
     * @param user
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://WebService/", className = "Clases.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://WebService/", className = "Clases.LoginResponse")
    @Action(input = "http://WebService/Principal/LoginRequest", output = "http://WebService/Principal/LoginResponse")
    public boolean login(
        @WebParam(name = "user", targetNamespace = "")
        String user,
        @WebParam(name = "pass", targetNamespace = "")
        String pass,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento);

    /**
     * 
     * @param descripcion
     * @param idActivo
     * @param tiempo
     * @param departamento
     * @param usuario
     * @param empresa
     * @param nombre
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "rentar", targetNamespace = "http://WebService/", className = "Clases.Rentar")
    @ResponseWrapper(localName = "rentarResponse", targetNamespace = "http://WebService/", className = "Clases.RentarResponse")
    @Action(input = "http://WebService/Principal/rentarRequest", output = "http://WebService/Principal/rentarResponse")
    public String rentar(
        @WebParam(name = "idActivo", targetNamespace = "")
        String idActivo,
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento,
        @WebParam(name = "descripcion", targetNamespace = "")
        String descripcion,
        @WebParam(name = "nombre", targetNamespace = "")
        String nombre,
        @WebParam(name = "tiempo", targetNamespace = "")
        String tiempo);

    /**
     * 
     * @param departamento
     * @param usuario
     * @param empresa
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getRentasDisponibles", targetNamespace = "http://WebService/", className = "Clases.GetRentasDisponibles")
    @ResponseWrapper(localName = "getRentasDisponiblesResponse", targetNamespace = "http://WebService/", className = "Clases.GetRentasDisponiblesResponse")
    @Action(input = "http://WebService/Principal/getRentasDisponiblesRequest", output = "http://WebService/Principal/getRentasDisponiblesResponse")
    public String getRentasDisponibles(
        @WebParam(name = "usuario", targetNamespace = "")
        String usuario,
        @WebParam(name = "empresa", targetNamespace = "")
        String empresa,
        @WebParam(name = "departamento", targetNamespace = "")
        String departamento);

}
